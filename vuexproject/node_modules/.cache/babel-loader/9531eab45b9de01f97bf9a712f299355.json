{"remainingRequest":"/Users/danielaoh/dev/test/vuexproject/node_modules/babel-loader/lib/index.js!/Users/danielaoh/dev/test/vuexproject/node_modules/eslint-loader/index.js??ref--13-0!/Users/danielaoh/dev/test/vuexproject/src/store/store.js","dependencies":[{"path":"/Users/danielaoh/dev/test/vuexproject/src/store/store.js","mtime":1537393538219},{"path":"/Users/danielaoh/dev/test/vuexproject/package.json","mtime":1537487730316},{"path":"/Users/danielaoh/dev/test/vuexproject/node_modules/cache-loader/dist/cjs.js","mtime":1537488312832},{"path":"/Users/danielaoh/dev/test/vuexproject/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/danielaoh/dev/test/vuexproject/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\nimport createPersistedState from 'vuex-persistedstate';\nVue.use(Vuex);\nVue.use(VueAxios, axios);\nexport default new Vuex.Store({\n  plugins: [createPersistedState({\n    key: 'somekey',\n    storage: window.localStorage,\n    reducer: function reducer(state) {\n      return {//do something\n        //this will pass the state & return the state with only the objects you want to store\n      };\n    }\n  })],\n  state: {\n    tickets: []\n  },\n  actions: {\n    loadTickets: function loadTickets(_ref) {\n      var commit = _ref.commit;\n      axios.get('http://localhost:4000/tickets').then(function (r) {\n        return r.data;\n      }).then(function (tickets) {\n        commit('SET_TICKETS', tickets);\n      });\n    },\n    putTickets: function putTickets(_ref2, payload) {\n      var state = _ref2.state,\n          commit = _ref2.commit;\n      axios.post('http://localhost:4000/tickets/add', payload).then(function (response) {\n        commit('ADD_TICKET', payload);\n      });\n    }\n  },\n  mutations: {\n    SET_TICKETS: function SET_TICKETS(state, tickets) {\n      state.tickets = tickets;\n    },\n    ADD_TICKET: function ADD_TICKET(state, tickets) {\n      state.tickets.push(tickets);\n    }\n  }\n});",{"version":3,"sources":["/Users/danielaoh/dev/test/vuexproject/src/store/store.js"],"names":["Vue","Vuex","axios","VueAxios","createPersistedState","use","Store","plugins","key","storage","window","localStorage","reducer","state","tickets","actions","loadTickets","commit","get","then","r","data","putTickets","payload","post","response","mutations","SET_TICKETS","ADD_TICKET","push"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,oBAAP,MAAiC,qBAAjC;AAEAJ,GAAG,CAACK,GAAJ,CAAQJ,IAAR;AACAD,GAAG,CAACK,GAAJ,CAAQF,QAAR,EAAkBD,KAAlB;AAGA,eAAe,IAAID,IAAI,CAACK,KAAT,CAAe;AAC5BC,EAAAA,OAAO,EAAE,CAACH,oBAAoB,CAAC;AAC7BI,IAAAA,GAAG,EAAE,SADwB;AAE7BC,IAAAA,OAAO,EAAEC,MAAM,CAACC,YAFa;AAG7BC,IAAAA,OAAO,EAAE,iBAAAC,KAAK;AAAA,aAAK,CACjB;AACA;AAFiB,OAAL;AAAA;AAHe,GAAD,CAArB,CADmB;AAS5BA,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE;AADJ,GATqB;AAa5BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WADO,6BACkB;AAAA,UAAVC,MAAU,QAAVA,MAAU;AACvBf,MAAAA,KAAK,CAACgB,GAAN,CAAU,+BAAV,EACGC,IADH,CACQ,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAN;AAAA,OADT,EAEGF,IAFH,CAEQ,UAAAL,OAAO,EAAI;AACjBG,QAAAA,MAAM,CAAC,aAAD,EAAgBH,OAAhB,CAAN;AACC,OAJH;AAKD,KAPM;AAQPQ,IAAAA,UARO,6BAQoBC,OARpB,EAQ6B;AAAA,UAAxBV,KAAwB,SAAxBA,KAAwB;AAAA,UAAjBI,MAAiB,SAAjBA,MAAiB;AAClCf,MAAAA,KAAK,CAACsB,IAAN,CAAW,mCAAX,EAA+CD,OAA/C,EACGJ,IADH,CACQ,UAACM,QAAD,EAAc;AAClBR,QAAAA,MAAM,CAAC,YAAD,EAAeM,OAAf,CAAN;AACD,OAHH;AAKD;AAdM,GAbmB;AA6B5BG,EAAAA,SAAS,EAAE;AACTC,IAAAA,WADS,uBACId,KADJ,EACWC,OADX,EACoB;AAC3BD,MAAAA,KAAK,CAACC,OAAN,GAAgBA,OAAhB;AAED,KAJQ;AAKTc,IAAAA,UALS,sBAKGf,KALH,EAKSC,OALT,EAKkB;AACzBD,MAAAA,KAAK,CAACC,OAAN,CAAce,IAAd,CAAmBf,OAAnB;AACD;AAPQ;AA7BiB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport axios from 'axios'\nimport VueAxios from 'vue-axios'\nimport createPersistedState from 'vuex-persistedstate'\n\nVue.use(Vuex)\nVue.use(VueAxios, axios)\n\n\nexport default new Vuex.Store({\n  plugins: [createPersistedState({\n    key: 'somekey',\n    storage: window.localStorage,\n    reducer: state => ({\n      //do something\n      //this will pass the state & return the state with only the objects you want to store\n    })\n  })],\n  state: {\n    tickets: [],\n  },\n\n  actions: {\n    loadTickets ({ commit }) {\n      axios.get('http://localhost:4000/tickets')\n        .then(r => r.data)\n        .then(tickets => {\n        commit('SET_TICKETS', tickets)\n        })\n    },\n    putTickets({state, commit},payload) {\n      axios.post('http://localhost:4000/tickets/add',payload)\n        .then((response) => {\n          commit('ADD_TICKET', payload);\n        })\n\n    }\n  },\n  mutations: {\n    SET_TICKETS (state, tickets) {\n      state.tickets = tickets\n\n    },\n    ADD_TICKET (state,tickets) {\n      state.tickets.push(tickets)\n    }\n  }\n})\n"]}]}